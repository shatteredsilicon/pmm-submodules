#!/bin/bash

set -o errexit
set -o xtrace

. $(dirname $0)/vars

update_grafana_node_modules() {
    if [[ -z "${USE_DOCKER}" ]] || [[ ${USE_DOCKER} -eq 0 ]]; then
        cd ${tmp_dir}
        rm -rf grafana*
        spectool -C ./ -g ${submodule_dir}/grafana/grafana.spec
        version="v$(rpmspec -q --qf "%{version}" ${submodule_dir}/grafana/grafana.spec)"
        tar -zxf grafana-*.tar.gz
        cd $(find . -maxdepth 1 -name "grafana*" -type d | head -1)
        patch -ruN -d ./ --strip 1 < ${submodule_dir}/grafana/0001-NPM-audit-fix.patch
        yarn install
        tar -zcpf ${submodule_dir}/grafana/grafana-node_modules-${version}.tar.gz node_modules
    else
        chown -R 1000:1000 ${submodule_dir}
        docker run --rm -v ${submodule_dir}:/home/builder/sources ${rpmbuild_docker_image} sh -c "
            set -o errexit
            set -o xtrace

            spectool -C ./ -g /home/builder/sources/grafana/grafana.spec
            version=$(rpmspec -q --qf "%{version}" /home/builder/sources/grafana/grafana.spec)
            tar -zxf grafana-*.tar.gz
            cd grafana*
            patch -ruN -d ./ --strip 1 < ${submodule_dir}/grafana/0001-NPM-audit-fix.patch
            yarn install
            tar -zcpf /home/builder/sources/grafana/grafana-node_modules-\${version}.tar.gz node_modules
        "
    fi
}

main() {
    update_grafana_node_modules
}

main
exit 0
